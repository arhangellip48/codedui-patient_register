// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 15.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace patient_register
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AssertChosePacient - Используйте "AssertChosePacientExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void AssertChosePacient()
        {
            #region Variable Declarations
            WinButton uIДействияButton1 = this.UIКвазарWindow.UIРеестрпациентовWindow.UIДействияButton.UIДействияButton1;
            #endregion

            // Убедитесь, что свойство Enabled "Действия" кнопка равняется "True"
            Assert.AreEqual(this.AssertChosePacientExpectedValues.UIДействияButton1Enabled, uIДействияButton1.Enabled, "Проверка выбора пациента");
        }
        
        /// <summary>
        /// AssertPacientJMK - Используйте "AssertPacientJMKExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void AssertPacientJMK()
        {
            #region Variable Declarations
            WinTitleBar uIОбзорЭМКпациентаАббаTitleBar = this.UIОбзорЭМКпациентаАббаWindow.UIОбзорЭМКпациентаАббаTitleBar;
            #endregion

            // Убедитесь, что свойство DisplayText "Обзор ЭМК пациента Аббас Лорин Махсеновна" название содержит "Обзор ЭМК пациента"
            StringAssert.Contains(uIОбзорЭМКпациентаАббаTitleBar.DisplayText, this.AssertPacientJMKExpectedValues.UIОбзорЭМКпациентаАббаTitleBarDisplayText);
        }
        
        /// <summary>
        /// choseJMK
        /// </summary>
        public void choseJMK()
        {

            // Последнее действие мыши не записано.
        }
        
        /// <summary>
        /// choseJMKreplay
        /// </summary>
        public void choseJMKreplay()
        {
            #region Variable Declarations
            WinButton uIПросмотркартыButton = this.UIМастервводаманипуляцWindow.UIПросмотркартыWindow.UIПросмотркартыButton;
            #endregion

            // Щелкните "Просмотр карты" кнопка
            Mouse.Click(uIПросмотркартыButton, new Point(74, 14));
        }
        
        /// <summary>
        /// closedmaster
        /// </summary>
        public void closedmaster()
        {
            #region Variable Declarations
            WinTree uIExpOverviewTree = this.UIОбзорЭМКпациентаАббаWindow.UIExpOverviewWindow.UIExpOverviewTree;
            WinButton uIЗакрытьButton = this.UIОбзорЭМКпациентаАббаWindow.UIОбзорЭМКпациентаАббаTitleBar.UIЗакрытьButton;
            WinClient uIRegularMedicalCheckuClient = this.UIМастервводаманипуляцWindow.UIRegularMedicalCheckuWindow.UIRegularMedicalCheckuClient;
            WinButton uIЗакрытьButton1 = this.UIМастервводаманипуляцWindow.UIМастервводаманипуляцTitleBar.UIЗакрытьButton;
            #endregion

            // Щелкните "expOverview" дерево
            Mouse.Click(uIExpOverviewTree, new Point(300, 52));

            // Щелкните "Закрыть" кнопка
            Mouse.Click(uIЗакрытьButton, new Point(9, 4));

            // Щелкните "RegularMedicalCheckupView" клиент
            Mouse.Click(uIRegularMedicalCheckuClient, new Point(654, 110));

            // Щелкните "RegularMedicalCheckupView" клиент
            Mouse.Click(uIRegularMedicalCheckuClient, new Point(704, 31));

            // Щелкните "Закрыть" кнопка
            Mouse.Click(uIЗакрытьButton1, new Point(13, 11));
        }
        
        /// <summary>
        /// loadСheck - Используйте "loadСheckExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void loadСheck()
        {
            #region Variable Declarations
            WinButton uIДействияButton1 = this.UIКвазарWindow.UIРеестрпациентовWindow.UIДействияButton.UIДействияButton1;
            #endregion

            // Убедитесь, что свойство Enabled "Действия" кнопка равняется "False"
            Assert.AreEqual(this.loadСheckExpectedValues.UIДействияButton1Enabled, uIДействияButton1.Enabled);
        }
        
        /// <summary>
        /// masterUnputassert - Используйте "masterUnputassertExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void masterUnputassert()
        {
            #region Variable Declarations
            WinTitleBar uIМастервводаманипуляцTitleBar = this.UIМастервводаманипуляцWindow.UIМастервводаманипуляцTitleBar;
            #endregion

            // Убедитесь, что свойство DisplayText "Мастер ввода манипуляций" название равняется "Мастер ввода манипуляций"
            Assert.AreEqual(this.masterUnputassertExpectedValues.UIМастервводаманипуляцTitleBarDisplayText, uIМастервводаманипуляцTitleBar.DisplayText);
        }
        
        /// <summary>
        /// regester_jornal - Используйте "regester_jornalParams" для передачи параметров в этот метод.
        /// </summary>
        public void regester_jornal()
        {
            #region Variable Declarations
            WinCustom uIItemCustom = this.UIItemWindow.UI_userNameWindow.UIItemCustom;
            WinEdit uI_userName_EmbeddableEdit = this.UIItemWindow.UI_userName_EmbeddableWindow.UI_userName_EmbeddableEdit;
            WinCustom uIItemCustom1 = this.UIItemWindow.UI_passwordWindow.UIItemCustom;
            WinEdit uI_password_EmbeddableEdit = this.UIItemWindow.UI_password_EmbeddableWindow.UI_password_EmbeddableEdit;
            WinButton uIВойтиButton = this.UIItemWindow.UIВойтиWindow.UIВойтиButton;
            WinButton uIРаботаснаселениемButton = this.UIКвазарWindow.UI_pluginContainerWindow.UIРаботаснаселениемButton;
            WinButton uIРеестрпациентовButton = this.UIКвазарWindow.UIMedSoftAttachedPopulWindow.UIРеестрпациентовButton;
            WinButton uIПолучитьданныеButton = this.UIКвазарWindow.UIРеестрпациентовWindow.UIПолучитьданныеWindow.UIПолучитьданныеButton;
            #endregion

            // Запуск "%ProgramFiles%\ООО МедСофт\Квазар\MedSoft.Start.exe"
            ApplicationUnderTest uIItemWindow = ApplicationUnderTest.Launch(this.regester_jornalParams.UIItemWindowExePath, this.regester_jornalParams.UIItemWindowAlternateExePath);

            // Щелкните пользовательский элемент управления
            Mouse.Click(uIItemCustom, new Point(115, 12));

            // Щелкните "_userName_EmbeddableTextBox" надпись
            Mouse.Click(uI_userName_EmbeddableEdit, new Point(73, 8));

            // Тип "{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}" в "_userName_EmbeddableTextBox" надпись
            Keyboard.SendKeys(uI_userName_EmbeddableEdit, this.regester_jornalParams.UI_userName_EmbeddableEditSendKeys, ModifierKeys.None);

            // Тип "Лушкин медсофт" в "_userName_EmbeddableTextBox" надпись
            uI_userName_EmbeddableEdit.Text = this.regester_jornalParams.UI_userName_EmbeddableEditText;

            // Щелкните пользовательский элемент управления
            Mouse.Click(uIItemCustom1, new Point(165, 11));

            // Тип "********" в "_password_EmbeddableTextBox" надпись
            Keyboard.SendKeys(uI_password_EmbeddableEdit, this.regester_jornalParams.UI_password_EmbeddableEditSendKeys, true);

            // Щелкните "Войти" кнопка
            Mouse.Click(uIВойтиButton, new Point(31, 12));

            // Щелкните "Работа с населением" кнопка
            Mouse.Click(uIРаботаснаселениемButton, new Point(64, 21));

            // Щелкните "Реестр пациентов" кнопка
            Mouse.Click(uIРеестрпациентовButton, new Point(110, 9));

            // Щелкните "Получить данные" кнопка
            Mouse.Click(uIПолучитьданныеButton, new Point(83, 16));
        }
        
        #region Properties
        public virtual AssertChosePacientExpectedValues AssertChosePacientExpectedValues
        {
            get
            {
                if ((this.mAssertChosePacientExpectedValues == null))
                {
                    this.mAssertChosePacientExpectedValues = new AssertChosePacientExpectedValues();
                }
                return this.mAssertChosePacientExpectedValues;
            }
        }
        
        public virtual AssertPacientJMKExpectedValues AssertPacientJMKExpectedValues
        {
            get
            {
                if ((this.mAssertPacientJMKExpectedValues == null))
                {
                    this.mAssertPacientJMKExpectedValues = new AssertPacientJMKExpectedValues();
                }
                return this.mAssertPacientJMKExpectedValues;
            }
        }
        
        public virtual loadСheckExpectedValues loadСheckExpectedValues
        {
            get
            {
                if ((this.mloadСheckExpectedValues == null))
                {
                    this.mloadСheckExpectedValues = new loadСheckExpectedValues();
                }
                return this.mloadСheckExpectedValues;
            }
        }
        
        public virtual masterUnputassertExpectedValues masterUnputassertExpectedValues
        {
            get
            {
                if ((this.mmasterUnputassertExpectedValues == null))
                {
                    this.mmasterUnputassertExpectedValues = new masterUnputassertExpectedValues();
                }
                return this.mmasterUnputassertExpectedValues;
            }
        }
        
        public virtual regester_jornalParams regester_jornalParams
        {
            get
            {
                if ((this.mregester_jornalParams == null))
                {
                    this.mregester_jornalParams = new regester_jornalParams();
                }
                return this.mregester_jornalParams;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIКвазарWindow UIКвазарWindow
        {
            get
            {
                if ((this.mUIКвазарWindow == null))
                {
                    this.mUIКвазарWindow = new UIКвазарWindow();
                }
                return this.mUIКвазарWindow;
            }
        }
        
        public UIActions0Window UIActions0Window
        {
            get
            {
                if ((this.mUIActions0Window == null))
                {
                    this.mUIActions0Window = new UIActions0Window();
                }
                return this.mUIActions0Window;
            }
        }
        
        public UIМастервводаманипуляцWindow UIМастервводаманипуляцWindow
        {
            get
            {
                if ((this.mUIМастервводаманипуляцWindow == null))
                {
                    this.mUIМастервводаманипуляцWindow = new UIМастервводаманипуляцWindow();
                }
                return this.mUIМастервводаманипуляцWindow;
            }
        }
        
        public UIОбзорЭМКпациентаАббаWindow UIОбзорЭМКпациентаАббаWindow
        {
            get
            {
                if ((this.mUIОбзорЭМКпациентаАббаWindow == null))
                {
                    this.mUIОбзорЭМКпациентаАббаWindow = new UIОбзорЭМКпациентаАббаWindow();
                }
                return this.mUIОбзорЭМКпациентаАббаWindow;
            }
        }
        
        public UIValueListDropDownWindow UIValueListDropDownWindow
        {
            get
            {
                if ((this.mUIValueListDropDownWindow == null))
                {
                    this.mUIValueListDropDownWindow = new UIValueListDropDownWindow();
                }
                return this.mUIValueListDropDownWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertChosePacientExpectedValues mAssertChosePacientExpectedValues;
        
        private AssertPacientJMKExpectedValues mAssertPacientJMKExpectedValues;
        
        private loadСheckExpectedValues mloadСheckExpectedValues;
        
        private masterUnputassertExpectedValues mmasterUnputassertExpectedValues;
        
        private regester_jornalParams mregester_jornalParams;
        
        private UIItemWindow mUIItemWindow;
        
        private UIКвазарWindow mUIКвазарWindow;
        
        private UIActions0Window mUIActions0Window;
        
        private UIМастервводаманипуляцWindow mUIМастервводаманипуляцWindow;
        
        private UIОбзорЭМКпациентаАббаWindow mUIОбзорЭМКпациентаАббаWindow;
        
        private UIValueListDropDownWindow mUIValueListDropDownWindow;
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AssertChosePacient"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class AssertChosePacientExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Enabled "Действия" кнопка равняется "True"
        /// </summary>
        public bool UIДействияButton1Enabled = true;
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AssertPacientJMK"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class AssertPacientJMKExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство DisplayText "Обзор ЭМК пациента Аббас Лорин Махсеновна" название содержит "Обзор ЭМК пациента"
        /// </summary>
        public string UIОбзорЭМКпациентаАббаTitleBarDisplayText = "Обзор ЭМК пациента";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "loadСheck"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class loadСheckExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Enabled "Действия" кнопка равняется "False"
        /// </summary>
        public bool UIДействияButton1Enabled = false;
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "masterUnputassert"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class masterUnputassertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство DisplayText "Мастер ввода манипуляций" название равняется "Мастер ввода манипуляций"
        /// </summary>
        public string UIМастервводаманипуляцTitleBarDisplayText = "Мастер ввода манипуляций";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "regester_jornal"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class regester_jornalParams
    {
        
        #region Fields
        /// <summary>
        /// Запуск "%ProgramFiles%\ООО МедСофт\Квазар\MedSoft.Start.exe"
        /// </summary>
        public string UIItemWindowExePath = "C:\\Program Files (x86)\\ООО МедСофт\\Квазар\\MedSoft.Start.exe";
        
        /// <summary>
        /// Запуск "%ProgramFiles%\ООО МедСофт\Квазар\MedSoft.Start.exe"
        /// </summary>
        public string UIItemWindowAlternateExePath = "%ProgramFiles%\\ООО МедСофт\\Квазар\\MedSoft.Start.exe";
        
        /// <summary>
        /// Тип "{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}" в "_userName_EmbeddableTextBox" надпись
        /// </summary>
        public string UI_userName_EmbeddableEditSendKeys = "{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Back}{Ba" +
            "ck}{Back}{Back}{Back}{Back}";
        
        /// <summary>
        /// Тип "Лушкин медсофт" в "_userName_EmbeddableTextBox" надпись
        /// </summary>
        public string UI_userName_EmbeddableEditText = "Лушкин медсофт";
        
        /// <summary>
        /// Тип "********" в "_password_EmbeddableTextBox" надпись
        /// </summary>
        public string UI_password_EmbeddableEditSendKeys = "mOL/lXDUSd/hy7K5BZnJEA==";
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = " ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public UI_userNameWindow UI_userNameWindow
        {
            get
            {
                if ((this.mUI_userNameWindow == null))
                {
                    this.mUI_userNameWindow = new UI_userNameWindow(this);
                }
                return this.mUI_userNameWindow;
            }
        }
        
        public UI_userName_EmbeddableWindow UI_userName_EmbeddableWindow
        {
            get
            {
                if ((this.mUI_userName_EmbeddableWindow == null))
                {
                    this.mUI_userName_EmbeddableWindow = new UI_userName_EmbeddableWindow(this);
                }
                return this.mUI_userName_EmbeddableWindow;
            }
        }
        
        public UI_passwordWindow UI_passwordWindow
        {
            get
            {
                if ((this.mUI_passwordWindow == null))
                {
                    this.mUI_passwordWindow = new UI_passwordWindow(this);
                }
                return this.mUI_passwordWindow;
            }
        }
        
        public UI_password_EmbeddableWindow UI_password_EmbeddableWindow
        {
            get
            {
                if ((this.mUI_password_EmbeddableWindow == null))
                {
                    this.mUI_password_EmbeddableWindow = new UI_password_EmbeddableWindow(this);
                }
                return this.mUI_password_EmbeddableWindow;
            }
        }
        
        public UIВойтиWindow UIВойтиWindow
        {
            get
            {
                if ((this.mUIВойтиWindow == null))
                {
                    this.mUIВойтиWindow = new UIВойтиWindow(this);
                }
                return this.mUIВойтиWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI_userNameWindow mUI_userNameWindow;
        
        private UI_userName_EmbeddableWindow mUI_userName_EmbeddableWindow;
        
        private UI_passwordWindow mUI_passwordWindow;
        
        private UI_password_EmbeddableWindow mUI_password_EmbeddableWindow;
        
        private UIВойтиWindow mUIВойтиWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_userNameWindow : WinWindow
    {
        
        public UI_userNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_userName";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public WinCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new WinCustom(this);
                    #region Условия поиска
                    this.mUIItemCustom.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private WinCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_userName_EmbeddableWindow : WinWindow
    {
        
        public UI_userName_EmbeddableWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_userName_EmbeddableTextBox";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_userName_EmbeddableEdit
        {
            get
            {
                if ((this.mUI_userName_EmbeddableEdit == null))
                {
                    this.mUI_userName_EmbeddableEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUI_userName_EmbeddableEdit.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUI_userName_EmbeddableEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_userName_EmbeddableEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_passwordWindow : WinWindow
    {
        
        public UI_passwordWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_password";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public WinCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new WinCustom(this);
                    #region Условия поиска
                    this.mUIItemCustom.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private WinCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_password_EmbeddableWindow : WinWindow
    {
        
        public UI_password_EmbeddableWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_password_EmbeddableTextBox";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_password_EmbeddableEdit
        {
            get
            {
                if ((this.mUI_password_EmbeddableEdit == null))
                {
                    this.mUI_password_EmbeddableEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUI_password_EmbeddableEdit.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUI_password_EmbeddableEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_password_EmbeddableEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIВойтиWindow : WinWindow
    {
        
        public UIВойтиWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_acceptButton";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public WinButton UIВойтиButton
        {
            get
            {
                if ((this.mUIВойтиButton == null))
                {
                    this.mUIВойтиButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIВойтиButton.SearchProperties[WinButton.PropertyNames.Name] = "Войти";
                    this.mUIВойтиButton.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUIВойтиButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIВойтиButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIКвазарWindow : WinWindow
    {
        
        public UIКвазарWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Квазар";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Квазар");
            this.WindowTitles.Add("Квазар - Реестр пациентов");
            #endregion
        }
        
        #region Properties
        public UI_pluginContainerWindow UI_pluginContainerWindow
        {
            get
            {
                if ((this.mUI_pluginContainerWindow == null))
                {
                    this.mUI_pluginContainerWindow = new UI_pluginContainerWindow(this);
                }
                return this.mUI_pluginContainerWindow;
            }
        }
        
        public UIMedSoftAttachedPopulWindow UIMedSoftAttachedPopulWindow
        {
            get
            {
                if ((this.mUIMedSoftAttachedPopulWindow == null))
                {
                    this.mUIMedSoftAttachedPopulWindow = new UIMedSoftAttachedPopulWindow(this);
                }
                return this.mUIMedSoftAttachedPopulWindow;
            }
        }
        
        public UIРеестрпациентовWindow UIРеестрпациентовWindow
        {
            get
            {
                if ((this.mUIРеестрпациентовWindow == null))
                {
                    this.mUIРеестрпациентовWindow = new UIРеестрпациентовWindow(this);
                }
                return this.mUIРеестрпациентовWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI_pluginContainerWindow mUI_pluginContainerWindow;
        
        private UIMedSoftAttachedPopulWindow mUIMedSoftAttachedPopulWindow;
        
        private UIРеестрпациентовWindow mUIРеестрпациентовWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI_pluginContainerWindow : WinWindow
    {
        
        public UI_pluginContainerWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_pluginContainer";
            this.WindowTitles.Add("Квазар");
            #endregion
        }
        
        #region Properties
        public WinButton UIРаботаснаселениемButton
        {
            get
            {
                if ((this.mUIРаботаснаселениемButton == null))
                {
                    this.mUIРаботаснаселениемButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIРаботаснаселениемButton.SearchProperties[WinButton.PropertyNames.Name] = "Работа с населением";
                    this.mUIРаботаснаселениемButton.WindowTitles.Add("Квазар");
                    #endregion
                }
                return this.mUIРаботаснаселениемButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIРаботаснаселениемButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIMedSoftAttachedPopulWindow : WinWindow
    {
        
        public UIMedSoftAttachedPopulWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "MedSoft.AttachedPopulationWork";
            this.WindowTitles.Add("Квазар");
            #endregion
        }
        
        #region Properties
        public WinButton UIРеестрпациентовButton
        {
            get
            {
                if ((this.mUIРеестрпациентовButton == null))
                {
                    this.mUIРеестрпациентовButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIРеестрпациентовButton.SearchProperties[WinButton.PropertyNames.Name] = "Реестр пациентов";
                    this.mUIРеестрпациентовButton.WindowTitles.Add("Квазар");
                    #endregion
                }
                return this.mUIРеестрпациентовButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIРеестрпациентовButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIРеестрпациентовWindow : WinWindow
    {
        
        public UIРеестрпациентовWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "PatientRegistryView";
            this.WindowTitles.Add("Квазар - Реестр пациентов");
            #endregion
        }
        
        #region Properties
        public UIПолучитьданныеWindow UIПолучитьданныеWindow
        {
            get
            {
                if ((this.mUIПолучитьданныеWindow == null))
                {
                    this.mUIПолучитьданныеWindow = new UIПолучитьданныеWindow(this);
                }
                return this.mUIПолучитьданныеWindow;
            }
        }
        
        public UIДействияButton UIДействияButton
        {
            get
            {
                if ((this.mUIДействияButton == null))
                {
                    this.mUIДействияButton = new UIДействияButton(this);
                }
                return this.mUIДействияButton;
            }
        }
        
        public UIBindingList1строка1Row UIBindingList1строка1Row
        {
            get
            {
                if ((this.mUIBindingList1строка1Row == null))
                {
                    this.mUIBindingList1строка1Row = new UIBindingList1строка1Row(this);
                }
                return this.mUIBindingList1строка1Row;
            }
        }
        
        public UICmbDiagnosisWindow UICmbDiagnosisWindow
        {
            get
            {
                if ((this.mUICmbDiagnosisWindow == null))
                {
                    this.mUICmbDiagnosisWindow = new UICmbDiagnosisWindow(this);
                }
                return this.mUICmbDiagnosisWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIПолучитьданныеWindow mUIПолучитьданныеWindow;
        
        private UIДействияButton mUIДействияButton;
        
        private UIBindingList1строка1Row mUIBindingList1строка1Row;
        
        private UICmbDiagnosisWindow mUICmbDiagnosisWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIПолучитьданныеWindow : WinWindow
    {
        
        public UIПолучитьданныеWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_getData";
            this.WindowTitles.Add("Квазар - Реестр пациентов");
            #endregion
        }
        
        #region Properties
        public WinButton UIПолучитьданныеButton
        {
            get
            {
                if ((this.mUIПолучитьданныеButton == null))
                {
                    this.mUIПолучитьданныеButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIПолучитьданныеButton.SearchProperties[WinButton.PropertyNames.Name] = "Получить данные";
                    this.mUIПолучитьданныеButton.WindowTitles.Add("Квазар - Реестр пациентов");
                    #endregion
                }
                return this.mUIПолучитьданныеButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIПолучитьданныеButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIДействияButton : WinButton
    {
        
        public UIДействияButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinButton.PropertyNames.Name] = "Действия";
            this.WindowTitles.Add("Квазар - Реестр пациентов");
            #endregion
        }
        
        #region Properties
        public WinButton UIДействияButton1
        {
            get
            {
                if ((this.mUIДействияButton1 == null))
                {
                    this.mUIДействияButton1 = new WinButton(this);
                    #region Условия поиска
                    this.mUIДействияButton1.SearchProperties[WinButton.PropertyNames.Name] = "Действия";
                    this.mUIДействияButton1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIДействияButton1.WindowTitles.Add("Квазар - Реестр пациентов");
                    #endregion
                }
                return this.mUIДействияButton1;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIДействияButton1;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIBindingList1строка1Row : WinRow
    {
        
        public UIBindingList1строка1Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinRow.PropertyNames.Name] = "BindingList`1 строка 1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Квазар - Реестр пациентов");
            #endregion
        }
        
        #region Properties
        public UIBindingList1Table UIBindingList1Table
        {
            get
            {
                if ((this.mUIBindingList1Table == null))
                {
                    this.mUIBindingList1Table = new UIBindingList1Table(this);
                }
                return this.mUIBindingList1Table;
            }
        }
        #endregion
        
        #region Fields
        private UIBindingList1Table mUIBindingList1Table;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIBindingList1Table : WinTable
    {
        
        public UIBindingList1Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinTable.PropertyNames.Name] = "BindingList`1";
            this.WindowTitles.Add("Квазар - Реестр пациентов");
            #endregion
        }
        
        #region Properties
        public WinRow UIBindingList1строка1Row
        {
            get
            {
                if ((this.mUIBindingList1строка1Row == null))
                {
                    this.mUIBindingList1строка1Row = new WinRow(this);
                    #region Условия поиска
                    this.mUIBindingList1строка1Row.SearchProperties[WinRow.PropertyNames.Name] = "BindingList`1 строка 1";
                    this.mUIBindingList1строка1Row.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mUIBindingList1строка1Row.WindowTitles.Add("Квазар - Реестр пациентов");
                    #endregion
                }
                return this.mUIBindingList1строка1Row;
            }
        }
        #endregion
        
        #region Fields
        private WinRow mUIBindingList1строка1Row;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UICmbDiagnosisWindow : WinWindow
    {
        
        public UICmbDiagnosisWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbDiagnosis";
            this.WindowTitles.Add("Квазар - Реестр пациентов");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUIItemComboBox.WindowTitles.Add("Квазар - Реестр пациентов");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        
        public WinComboBox UICmbDiagnosisComboBox
        {
            get
            {
                if ((this.mUICmbDiagnosisComboBox == null))
                {
                    this.mUICmbDiagnosisComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUICmbDiagnosisComboBox.WindowTitles.Add("Квазар - Реестр пациентов");
                    #endregion
                }
                return this.mUICmbDiagnosisComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        
        private WinComboBox mUICmbDiagnosisComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIActions0Window : WinWindow
    {
        
        public UIActions0Window()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Actions - 0";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Actions - 0");
            #endregion
        }
        
        #region Properties
        public UIPopupControlWindow UIPopupControlWindow
        {
            get
            {
                if ((this.mUIPopupControlWindow == null))
                {
                    this.mUIPopupControlWindow = new UIPopupControlWindow(this);
                }
                return this.mUIPopupControlWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupControlWindow mUIPopupControlWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIPopupControlWindow : WinWindow
    {
        
        public UIPopupControlWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "PopupControl";
            this.WindowTitles.Add("Actions - 0");
            #endregion
        }
        
        #region Properties
        public WinMenu UIPopupControlMenu
        {
            get
            {
                if ((this.mUIPopupControlMenu == null))
                {
                    this.mUIPopupControlMenu = new WinMenu(this);
                    #region Условия поиска
                    this.mUIPopupControlMenu.WindowTitles.Add("Actions - 0");
                    #endregion
                }
                return this.mUIPopupControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private WinMenu mUIPopupControlMenu;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIМастервводаманипуляцWindow : WinWindow
    {
        
        public UIМастервводаманипуляцWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Мастер ввода манипуляций";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Мастер ввода манипуляций");
            #endregion
        }
        
        #region Properties
        public UIМастервводаманипуляцTitleBar UIМастервводаманипуляцTitleBar
        {
            get
            {
                if ((this.mUIМастервводаманипуляцTitleBar == null))
                {
                    this.mUIМастервводаманипуляцTitleBar = new UIМастервводаманипуляцTitleBar(this);
                }
                return this.mUIМастервводаманипуляцTitleBar;
            }
        }
        
        public UIПросмотркартыWindow UIПросмотркартыWindow
        {
            get
            {
                if ((this.mUIПросмотркартыWindow == null))
                {
                    this.mUIПросмотркартыWindow = new UIПросмотркартыWindow(this);
                }
                return this.mUIПросмотркартыWindow;
            }
        }
        
        public UIRegularMedicalCheckuWindow UIRegularMedicalCheckuWindow
        {
            get
            {
                if ((this.mUIRegularMedicalCheckuWindow == null))
                {
                    this.mUIRegularMedicalCheckuWindow = new UIRegularMedicalCheckuWindow(this);
                }
                return this.mUIRegularMedicalCheckuWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIМастервводаманипуляцTitleBar mUIМастервводаманипуляцTitleBar;
        
        private UIПросмотркартыWindow mUIПросмотркартыWindow;
        
        private UIRegularMedicalCheckuWindow mUIRegularMedicalCheckuWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIМастервводаманипуляцTitleBar : WinTitleBar
    {
        
        public UIМастервводаманипуляцTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Мастер ввода манипуляций");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗакрытьButton
        {
            get
            {
                if ((this.mUIЗакрытьButton == null))
                {
                    this.mUIЗакрытьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIЗакрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mUIЗакрытьButton.WindowTitles.Add("Мастер ввода манипуляций");
                    #endregion
                }
                return this.mUIЗакрытьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗакрытьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIПросмотркартыWindow : WinWindow
    {
        
        public UIПросмотркартыWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnShowOverview";
            this.WindowTitles.Add("Мастер ввода манипуляций");
            #endregion
        }
        
        #region Properties
        public WinButton UIПросмотркартыButton
        {
            get
            {
                if ((this.mUIПросмотркартыButton == null))
                {
                    this.mUIПросмотркартыButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIПросмотркартыButton.SearchProperties[WinButton.PropertyNames.Name] = "Просмотр карты";
                    this.mUIПросмотркартыButton.WindowTitles.Add("Мастер ввода манипуляций");
                    #endregion
                }
                return this.mUIПросмотркартыButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIПросмотркартыButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIRegularMedicalCheckuWindow : WinWindow
    {
        
        public UIRegularMedicalCheckuWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "RegularMedicalCheckupView";
            this.WindowTitles.Add("Мастер ввода манипуляций");
            #endregion
        }
        
        #region Properties
        public WinClient UIRegularMedicalCheckuClient
        {
            get
            {
                if ((this.mUIRegularMedicalCheckuClient == null))
                {
                    this.mUIRegularMedicalCheckuClient = new WinClient(this);
                    #region Условия поиска
                    this.mUIRegularMedicalCheckuClient.WindowTitles.Add("Мастер ввода манипуляций");
                    #endregion
                }
                return this.mUIRegularMedicalCheckuClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIRegularMedicalCheckuClient;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIОбзорЭМКпациентаАббаWindow : WinWindow
    {
        
        public UIОбзорЭМКпациентаАббаWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Обзор ЭМК пациента Аббас Лорин Махсеновна";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Обзор ЭМК пациента Аббас Лорин Махсеновна");
            #endregion
        }
        
        #region Properties
        public UIОбзорЭМКпациентаАббаTitleBar UIОбзорЭМКпациентаАббаTitleBar
        {
            get
            {
                if ((this.mUIОбзорЭМКпациентаАббаTitleBar == null))
                {
                    this.mUIОбзорЭМКпациентаАббаTitleBar = new UIОбзорЭМКпациентаАббаTitleBar(this);
                }
                return this.mUIОбзорЭМКпациентаАббаTitleBar;
            }
        }
        
        public UIExpOverviewWindow UIExpOverviewWindow
        {
            get
            {
                if ((this.mUIExpOverviewWindow == null))
                {
                    this.mUIExpOverviewWindow = new UIExpOverviewWindow(this);
                }
                return this.mUIExpOverviewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIОбзорЭМКпациентаАббаTitleBar mUIОбзорЭМКпациентаАббаTitleBar;
        
        private UIExpOverviewWindow mUIExpOverviewWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIОбзорЭМКпациентаАббаTitleBar : WinTitleBar
    {
        
        public UIОбзорЭМКпациентаАббаTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Обзор ЭМК пациента Аббас Лорин Махсеновна");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗакрытьButton
        {
            get
            {
                if ((this.mUIЗакрытьButton == null))
                {
                    this.mUIЗакрытьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIЗакрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mUIЗакрытьButton.WindowTitles.Add("Обзор ЭМК пациента Аббас Лорин Махсеновна");
                    #endregion
                }
                return this.mUIЗакрытьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗакрытьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIExpOverviewWindow : WinWindow
    {
        
        public UIExpOverviewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "expOverview";
            this.WindowTitles.Add("Обзор ЭМК пациента Аббас Лорин Махсеновна");
            #endregion
        }
        
        #region Properties
        public WinTree UIExpOverviewTree
        {
            get
            {
                if ((this.mUIExpOverviewTree == null))
                {
                    this.mUIExpOverviewTree = new WinTree(this);
                    #region Условия поиска
                    this.mUIExpOverviewTree.WindowTitles.Add("Обзор ЭМК пациента Аббас Лорин Махсеновна");
                    #endregion
                }
                return this.mUIExpOverviewTree;
            }
        }
        #endregion
        
        #region Fields
        private WinTree mUIExpOverviewTree;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIValueListDropDownWindow : WinWindow
    {
        
        public UIValueListDropDownWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Гипертония";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIValueListDropDownList UIValueListDropDownList
        {
            get
            {
                if ((this.mUIValueListDropDownList == null))
                {
                    this.mUIValueListDropDownList = new UIValueListDropDownList(this);
                }
                return this.mUIValueListDropDownList;
            }
        }
        
        public UIValueListDropDownList1 UIValueListDropDownList1
        {
            get
            {
                if ((this.mUIValueListDropDownList1 == null))
                {
                    this.mUIValueListDropDownList1 = new UIValueListDropDownList1(this);
                }
                return this.mUIValueListDropDownList1;
            }
        }
        
        public UIValueListDropDownList2 UIValueListDropDownList2
        {
            get
            {
                if ((this.mUIValueListDropDownList2 == null))
                {
                    this.mUIValueListDropDownList2 = new UIValueListDropDownList2(this);
                }
                return this.mUIValueListDropDownList2;
            }
        }
        
        public UIValueListDropDownList3 UIValueListDropDownList3
        {
            get
            {
                if ((this.mUIValueListDropDownList3 == null))
                {
                    this.mUIValueListDropDownList3 = new UIValueListDropDownList3(this);
                }
                return this.mUIValueListDropDownList3;
            }
        }
        #endregion
        
        #region Fields
        private UIValueListDropDownList mUIValueListDropDownList;
        
        private UIValueListDropDownList1 mUIValueListDropDownList1;
        
        private UIValueListDropDownList2 mUIValueListDropDownList2;
        
        private UIValueListDropDownList3 mUIValueListDropDownList3;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIValueListDropDownList : WinList
    {
        
        public UIValueListDropDownList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinList.PropertyNames.Name] = "Гипертония";
            #endregion
        }
        
        #region Properties
        public WinListItem UIГипертонияListItem
        {
            get
            {
                if ((this.mUIГипертонияListItem == null))
                {
                    this.mUIГипертонияListItem = new WinListItem(this);
                    #region Условия поиска
                    this.mUIГипертонияListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Гипертония";
                    #endregion
                }
                return this.mUIГипертонияListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIГипертонияListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIValueListDropDownList1 : WinList
    {
        
        public UIValueListDropDownList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinList.PropertyNames.Name] = "Стенокардия";
            #endregion
        }
        
        #region Properties
        public WinListItem UIСтенокардияListItem
        {
            get
            {
                if ((this.mUIСтенокардияListItem == null))
                {
                    this.mUIСтенокардияListItem = new WinListItem(this);
                    #region Условия поиска
                    this.mUIСтенокардияListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Стенокардия";
                    #endregion
                }
                return this.mUIСтенокардияListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIСтенокардияListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIValueListDropDownList2 : WinList
    {
        
        public UIValueListDropDownList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinList.PropertyNames.Name] = "Инфаркт";
            #endregion
        }
        
        #region Properties
        public WinListItem UIИнфарктListItem
        {
            get
            {
                if ((this.mUIИнфарктListItem == null))
                {
                    this.mUIИнфарктListItem = new WinListItem(this);
                    #region Условия поиска
                    this.mUIИнфарктListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Инфаркт";
                    #endregion
                }
                return this.mUIИнфарктListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIИнфарктListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIValueListDropDownList3 : WinList
    {
        
        public UIValueListDropDownList3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinList.PropertyNames.Name] = "ХИБС";
            #endregion
        }
        
        #region Properties
        public WinListItem UIХИБСListItem
        {
            get
            {
                if ((this.mUIХИБСListItem == null))
                {
                    this.mUIХИБСListItem = new WinListItem(this);
                    #region Условия поиска
                    this.mUIХИБСListItem.SearchProperties[WinListItem.PropertyNames.Name] = "ХИБС";
                    #endregion
                }
                return this.mUIХИБСListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIХИБСListItem;
        #endregion
    }
}
